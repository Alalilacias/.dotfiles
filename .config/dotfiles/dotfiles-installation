#!/usr/bin/env bash
# Author: Alalilacias
# Description: Recopilation of the functions necesssary for the installation of the dotfiles
# Version: 0.3

# All custom install scripts must go in the same folder, as that is the way the installer is built.
# This is entirely due to my personal preference, but I believe that should be easier to manage than
# putting a distinct address (duplicated most of the time) in the config json files.
CUSTOM_INSTALL_DIR="${DOTCONFIG_DIR}/scripts/"
PKG_MANAGER_UPDATED=false

# Checks if the given package installed, with some exceptions for special files that aren't installed through the manager.
# Currently only tested for apt, as I have no other machines.
is_app_executable() {
  # Pretend app is not installed so installation proceeds regardless.
  if [[ "$FORCE" == "true" ]]; then
    return 1
  fi

  local executable="$1"

  case "$executable" in
  neovim-pip)
    pip3 show neovim &>/dev/null
    ;;
  neovim-gem)
    gem list --local neovim &>/dev/null
    ;;
  python3-setuptools | ruby-dev)
    case "$PACKAGE_MANAGER" in
    apt)
      dpkg -l | grep -q "$executable" &>/dev/null
      ;;
    pacman)
      pacman -Qi "$executable" &>/dev/null
      ;;
    dnf)
      dnf list installed "$executable" &>/dev/null
      ;;
    *)
      command -v "$executable" &>/dev/null
      ;;
    esac
    ;;
  *)
    command -v "$executable" &>/dev/null
    ;;
  esac
}

install_package() {
  local package="$1"
  local source_file="${2//\{HOME_DIR\}/$HOME_DIR}"

  # echo "Source file for $package: '$source_file'" # Debug line
  update_apt_if_needed

  if [[ -n "$source_file" && -f "$source_file" ]]; then
    source "$source_file"
  else
    echo "No valid source file found for $package"
  fi
}

# Makeshift function. Should be modified if Dotfiles are modified to accomodate other package managers.
# It is important to note that I haven't gotten my hands on a Fedora or Arch based system yet.
# That is to say, most applications of pacman and dnf are based on what I've found online about them,
# rather than my own experience with the systems.
update_pm_if_needed() {
  if [[ "$PKG_MANAGER_UPDATED" == "false" ]]; then
    case "$PACKAGE_MANAGER" in
    apt)
      sudo apt update
      ;;
    pacman) ;;
    dnf)
      sudo dnf check-update || true
      ;;
    *)
      echo "Unknown package manager: $PACKAGE_MANAGER"
      ;;
    esac
    PKG_MANAGER_UPDATED=true
  fi
}
