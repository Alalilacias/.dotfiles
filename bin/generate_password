#!/bin/bash

# Set the desired password length (default is 12)
PASSWORD_LENGTH=16

# Generate a cryptographically secure password with at least one of each:
# uppercase, lowercase, number, and symbol
generate_password() {
  while true; do
    # Generate a random password of specified length
    password=$(LC_ALL=C tr -dc 'A-Za-z0-9!@#$%^&*()-_+=~' </dev/urandom | head -c "$PASSWORD_LENGTH")

    # Check if the password meets the requirements
    if [[ "$password" =~ [A-Z] ]] && [[ "$password" =~ [a-z] ]] && [[ "$password" =~ [0-9] ]] && [[ "$password" =~ [\!\@\#\$\%\^\&\*\(\)\-\_\+\=\~] ]]; then
      echo "The generated password is: $password. You'll find it copied in your clipboard."

      # Copy the password to the clipboard
      if command -v xclip &>/dev/null; then
        echo -n "$password" | xclip -selection clipboard
      elif command -v xsel &>/dev/null; then
        echo -n "$password" | xsel --clipboard --input
      else
        echo "Error: xclip or xsel is required to copy to clipboard but is not installed."
      fi
      break
    fi
  done
}

# Call the function to generate and print the password
generate_password
